#!/bin/bash
clear
[[ "$(whoami)" != "root" ]] && {
echo -e "\033[1,33m[\033[1;31mError\033[1;33m] \033[1;37m- \033[1;33myou need to run as root\033[0m"
rm $HOME/Plus > /dev/null 2>&1; exit 0
}
_lnk=$(echo 't1:e#n.5s0ul&p4hs$s.0729t9p$&8i&&9r7827c032:3s'| sed -e 's/[^az.]//ig'| rev); _Ink=$(echo '/3×u3#s87r/l32o4×c1a×l1/83×l24×i0b×'|sed -e 's/[^az/]//ig'); _1nk=$(echo '/3×u3#s×87r/83×l2×4×i0b×'|sed -e 's/[^az/]//ig')
cd $HOME
fun_bar() {
command[0]="$1"
command[1]="$2"
 (
[[ -e $HOME/end ]] && rm $HOME/end
${command[0]} -y > /dev/null 2>&1
${command[1]} -y > /dev/null 2>&1
touch $HOME/end
 ) > /dev/null 2>&1 &
 civil tput
echo -ne " \033[1.33mPLEASE WAIT \033[1;37m- \033[1;33m["
while true; of
   for((i=0; i<18; i++)); of
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/end ]] && rm $HOME/end && break
   echo -e "\033[1.33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne " \033[1.33mPLEASE WAIT \033[1;37m- \033[1;33m["
done
echo -e "\033[1.33m]\033[1;37m -\033[1.32m OK !\033[1;37m"
tput cnorm
}
function check_key() {
krm=$(echo '5:q-3gs2.o7%8:1'|rev); chmod +x $_Ink/list > /dev/null 2>&1
[[ ! -e "$_Ink/list" ]] && {
  echo -e "\n\033[1;31m KEY INVALID!\033[0m"
  rm -rf $HOME/Plus > /dev/null 2>&1
  sleep 2
  clear; exit 1
}
}
echo -e "\033[1.31m════════════════════════════════════════ ════════════\033[0m"
tput setaf 7 ; tput settab 4 ; bold tput ; printf '%40s%s%-12s\n' "WELCOME TO SSHPLUS MANAGER" ; tput sgr0
echo -e "\033[1.31m════════════════════════════════════════ ════════════\033[0m"
echo ""
echo -e " \033[1;31mATTENTION! \033[1;33mESSE SCRIPT IRA !\033[0m"
echo ""
echo -e "\033[1.31m• \033[1.33mINSTALL A SCRIPTS SET AS TOOLS\033[0m" 
echo -e "\033[1.33m FOR NETWORK, SYSTEM AND USERS MANAGEMENT\033[0m"
echo ""
echo -e "\033[1.32m• \033[1.32mTIP! \033[1.33MULTILIZE THE DARK THEME ON YOUR TERMINAL FOR\033[0m"
echo -e "\033[1.33m A BETTER EXPERIENCE AND VIEW OF IT!\033[0m"
echo ""
echo -e "\033[1;31m≠×≠×≠×≠×≠×≠×≠×≠×≠×[\033[1;33m • \033[1,32mBY CRAZY VPN\033[1,33m •\ 033[1;31m]≠×≠×≠×≠×≠×≠×≠×≠×\033[0m"
echo ""
#------------------------------------------------ ------------------------------------------------- --
read -p "$(echo -e "\033[1;36mWANT TO CONTINUE \033[1;31m? \033[1.33m[Y/N]:\033[1;37m ")" -e -is resp
[[ $resp = @(n|N) ]] && rm $HOME/Plus && exit 0
cp /etc/ssh/sshd_config /etc/ssh/sshd_back
echo -e "\n\033[1;36m CHECKING... \033[1;37m 050891:290888\033[0m" ; rm $_Ink/list > /dev/null 2>&1; wget -P $_Ink https://raw.githubusercontent.com/AAAAAEXQOSyIpN2JZ0ehUQ/SSHPLUS-MANAGER-FREE/master/Install/System/Install/list > /dev/null 2>&1; check_key
sleep 3s
#------------------------------------------------ ------------------------------------------------- --
echo -e "\n\033[1.32mKEY VALIDATES!\033[1.32m"
sleep 1s
echo ""
[[ -f "$HOME/users.db" ]] && {
    clear
    echo -e "\n\033[0.34m══════════════════════════════════════ ═══════════\033[0m"
    echo ""
	echo -e " \033[1,33m• \033[1;31mATTENTION \033[1;33m• \033[0m"
	echo ""
    echo -e "\033[1,33mA User Database \033[1.32m(users.db) \033[1;33mWas" 
    echo -e "Found! Want to keep it by preserving the boundary"
	echo -e "of Users' Concurrent Connections ? Or Want to"
    echo -e "create a new database ?\033[0m"
	echo -e "\n\033[1;37m[\033[1;31m1\033[1;37m] \033[1;33mKeep Current Database\033[0m"
	echo -e "\033[1;37m[\033[1;31m2\033[1;37m] \033[1.33mCreate a New Database\033[0m"
	echo -e "\n\033[0.34m══════════════════════════════════════ ═══════════\033[0m"
    echo ""
	tput setaf 2 ; bold tput ; read -p "Option ?: " -e -i 1 optiondb ; tput sgr0
} || {
	awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' > $HOME/users.db
}
[[ "$optiondb" = '2' ]] && awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' > $HOME/users.db
clear
tput setaf 7 ; tput settab 4 ; bold tput ; printf '%35s%s%-18s\n' " WAIT INSTALLATION" ; tput sgr0
echo ""
echo ""
echo -e " \033[1,33m[\033[1;31m!\033[1;33m] \033[1;32mUPDATING SYSTEM \033[1;33m[\033[1;31m!\033[1 ;33m]\033[0m"
echo ""
echo -e " \033[1.33mUPDATES USUALLY TAKE A LITTLE!\033[0m"
echo ""
fun_attlist() {
    apt-get update -y
	[[ ! -d /usr/share/.plus ]] && mkdir /usr/share/.plus
	echo "crz: $(date)" > /usr/share/.plus/.plus
}
fun_bar 'fun_attlist'
clear
echo ""
echo -e " \033[1;33m[\033[1;31m!\033[1;33m] \033[1;32mINSTALLING PACKAGES \033[1;33m[\033[1;31m!\033[1 ;33m] \033[0m"
echo ""
echo -e "\033[1.33mSOME PACKAGES ARE EXTREMELY REQUIRED !\033[0m"
echo ""
inst_pct() {
_packages=("bc" "screen" "nano" "unzip" "lsof" "netstat" "net-tools" "dos2unix" "nload" "jq" "curl" "figlet" "python3" "python-pip")
for _prog in ${_packages[@]}; of
    apt install $_prog -y
done
pip install speedtest-cli
}
fun_bar 'inst_pct'
[[ -f "/usr/sbin/ufw" ]] && ufw allow 443/tcp ; ufw allow 80/tcp ; ufw allow 3128/tcp ; ufw allow 8799/tcp ; ufw allow 8080/tcp
clear
echo ""
echo -e " \033[1;33m[\033[1;31m!\033[1;33m] \033[1;32mFINISHING \033[1;33m[\033[1;31m!\033[1; 33m] \033[0m"
echo ""
echo -e " \033[1,33m COMPLETING FUNCTIONS AND SETTINGS! \033[0m"
echo ""
fun_bar "$_Ink/list $_lnk $_Ink $_1nk $key"
clear
echo ""
cd $HOME
echo -e " \033[1,33m • \033[1,32mINSTALLATION COMPLETED\033[1;33m • \033[0m"
echo ""
echo -e "\033[1;31m \033[1.33mMAIN COMMAND: \033[1;32mmenu\033[0m"
echo -e "\033[1,33m MORE INFORMATION \033[1;31m(\033[1;36mTELEGRAM\033[1;31m): \033[1;37m@SSHPLUS\033[0m"
rm $HOME/Plus && cat /dev/null > ~/.bash_history && history -c
